<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright © 2015 Mark Raynsford <code@io7m.com> https://www.io7m.com

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted, provided that the above
  copyright notice and this permission notice appear in all copies.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  -->

<Section
  id="6f79f2f0-7419-451b-b21c-2fd2c591a087"
  title="Expression Language"
  xmlns="urn:com.io7m.structural:8:0"
  xmlns:xi="http://www.w3.org/2001/XInclude">
  
  <Subsection id="8ac240fa-b331-4377-89c7-06f643dfe6d3" title="Notational Conventions">
    <Subsection title="Unicode">
      <Paragraph>
        The specification makes reference to the
        <LinkExternal target="http://unicode.org">Unicode</LinkExternal>
        character set which, at the time of writing, is at version
        <Term type="constant">6.2.0</Term>. The specification
        often references specific Unicode characters, and does so using
        the standard notation <Term type="expression">U+NNNN</Term>,
        where <Term type="variable">N</Term> represents a hexadecimal
        digit. For example, <Term type="constant">U+03BB</Term>
        corresponds to the lowercase lambda symbol <Term type="constant">λ</Term>.
      </Paragraph>
    </Subsection>

    <Subsection title="EBNF">
      <Paragraph>
        The specification gives grammar definitions in
        <Term type="package">ISO/IEC 14977:1996</Term> Extended Backus-Naur
        form.
      </Paragraph>
    </Subsection>
  </Subsection>
  
  <Subsection id="9136a4c5-51c2-4714-942c-968b4f007b68" title="Language">
    <Paragraph>
      The language understood by the <Term type="package">${project.parent.name}</Term>
      package can be defined by the following grammar:
    </Paragraph>
    <FormalItem type="specification" title="Grammar (non-terminals)">
      <Verbatim><xi:include href="expressions.txt" parse="text"/></Verbatim>
    </FormalItem>
    <Paragraph>
      The <Term type="package">${project.parent.name}</Term> lexer
      recognizes the sequences <Term type="constant">U+000D U+000A</Term>
      and <Term type="constant">U+000A</Term> as line terminators for the
      purposes of tracking line and column numbers for diagnostic messages. The
      lexer does not permit bare <Term type="constant">U+000D</Term>
      characters to appear outside of 
      <Link target="9d159b32-b6e0-41f6-88a7-01533e3bea1e">quoted strings</Link>.
    </Paragraph>
    <Paragraph id="d9d8f3a3-4b87-45e5-8da8-0b3028e51d15">
      Many systems that parse S-expressions allow for the use of square
      brackets to increase readability. For example:
    </Paragraph>
    <FormalItem type="specification" title="Square brackets">
      <Verbatim><xi:include href="squares.txt" parse="text"/></Verbatim>
    </FormalItem>
    <Paragraph>
      Note that the second version that uses square brackets is slightly
      easier to understand due to the square brackets more clearly indicating
      which of the nested lists are being terminated. The 
      <Term type="package">${project.parent.name}</Term> lexer can
      optionally treat <Term type="constant">U+005B [</Term> and
      <Term type="constant">U+005D ]</Term> as tokens, and the parser
      ensures that the use of the brackets is balanced with respect to
      ordinary parentheses as part of the grammar above. If square brackets
      are enabled, the language understood by the 
      <Term type="package">${project.parent.name}</Term> package is
      defined by <Term type="constant">expression_squares</Term>.
      Otherwise, the language is defined by
      <Term type="constant">expression</Term>.
    </Paragraph>
    <Paragraph>
      The terminals of the language are given by:
    </Paragraph>
    <FormalItem type="specification" title="Grammar (terminals)">
      <Verbatim><xi:include href="terminals.txt" parse="text"/></Verbatim>
    </FormalItem>
    <Paragraph>
      Due to limitations in the
      <LinkExternal target="https://en.wikipedia.org/wiki/Extended_Backus–Naur_Form">EBNF</LinkExternal>
      format, the definitions for <Term type="symbol">symbol_character</Term>
      and <Term type="symbol">quoted_character</Term> cannot be expressed
      directly.
    </Paragraph>
    <Paragraph>
      Informally, the <Term type="symbol">symbol_character</Term>
      rule should be understood to specify any Unicode character that is not
      <LinkExternal target="https://en.wikipedia.org/wiki/Whitespace_character">whitespace</LinkExternal>,
      is not <Term type="constant">U+0028 (</Term>,
      is not <Term type="constant">U+0029 )</Term>,
      and is not <Term type="constant">U+0022 "</Term>.
    </Paragraph>
    <Paragraph>
      If <Link target="d9d8f3a3-4b87-45e5-8da8-0b3028e51d15">square brackets</Link> are enabled,
      the <Term type="symbol">symbol_character_squares</Term>
      rule should be understood to replace the <Term type="symbol">symbol_character</Term>
      rule.
    </Paragraph>
    <Paragraph>
      The <Term type="symbol">quoted_character</Term> rule should
      be understood to specify any character that is not
      not <Term type="constant">U+0022 "</Term>.
    </Paragraph>
    <Paragraph id="9d159b32-b6e0-41f6-88a7-01533e3bea1e">
      Quoted strings may contain <Term type="Term">escape codes</Term>
      that are transformed to specific characters during lexing.
    </Paragraph>
    <FormalItem type="specification" title="Escape Codes">
      <Table type="genericTable">
        <Columns>
          <Column>Code</Column>
          <Column>Resulting Character</Column>
          <Column>Comment</Column>
        </Columns>
        <Row>
          <Cell><Term type="constant">\"</Term></Cell>
          <Cell><Term type="constant">U+0022</Term></Cell>
          <Cell>Double quote</Cell>
        </Row>
        <Row>
          <Cell><Term type="constant">\\</Term></Cell>
          <Cell><Term type="constant">U+005C</Term></Cell>
          <Cell>Backslash</Cell>
        </Row>
        <Row>
          <Cell><Term type="constant">\r</Term></Cell>
          <Cell><Term type="constant">U+000D</Term></Cell>
          <Cell>Carriage return</Cell>
        </Row>
        <Row>
          <Cell><Term type="constant">\n</Term></Cell>
          <Cell><Term type="constant">U+000A</Term></Cell>
          <Cell>Line feed</Cell>
        </Row>
        <Row>
          <Cell><Term type="constant">\t</Term></Cell>
          <Cell><Term type="constant">U+0009</Term></Cell>
          <Cell>Horizontal tab</Cell>
        </Row>
        <Row>
          <Cell><Term type="constant">\uNNNN</Term></Cell>
          <Cell><Term type="constant">U+NNNN</Term></Cell>
          <Cell>Unicode character NNNN (where N is a hexadecimal digit)</Cell>
        </Row>
        <Row>
          <Cell><Term type="constant">\UNNNNNNNN</Term></Cell>
          <Cell><Term type="constant">U+NNNNNNNN</Term></Cell>
          <Cell>Unicode character NNNNNNNN (where N is a hexadecimal digit)</Cell>
        </Row>
      </Table>
    </FormalItem>
  </Subsection>
</Section>
