<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>com.io7m.jsx 0.8.0 Documentation: 2.2. Language</title><link rel="stylesheet" type="text/css" href="jstructural-2.0.0-layout.css"/><link rel="stylesheet" type="text/css" href="jstructural-2.0.0-colour.css"/><link rel="stylesheet" type="text/css" href="documentation.css"/></head><body><div class="st200_body"><div class="brand">
  <div class="brand_left">
    <a href="http://io7m.com/">io7m</a>
  </div>
  <div class="brand_right">
    <a href="http://io7m.github.io/jsx/">com.io7m.jsx</a> 0.8.0
  </div>
</div><div class="st200_navbar st200_navbar_top"><table class="st200_navbar_table" summary="Navigation bar"><tr><td class="st200_navbar_prev_title_cell">2.1. Notational Conventions</td><td class="st200_navbar_up_title_cell">2. Expression Language</td><td class="st200_navbar_next_title_cell">3. API Reference</td></tr><tr><td class="st200_navbar_prev_file_cell"><a href="p2s1.xhtml#st200_p2s1">Previous</a></td><td class="st200_navbar_up_file_cell"><a href="p2.xhtml#st200_p2">Up</a></td><td class="st200_navbar_next_file_cell"><a href="p3.xhtml#st200_p3">Next</a></td></tr></table><hr class="st200_hr"/></div><div class="st200_section_container"><div class="st200_section_title_number"><a id="st200_p2s2" href="#st200_p2s2">2.2</a></div><div class="st200_section_title">Language</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s2pg1" href="#st200_p2s2pg1">1</a></div><div class="st200_paragraph">
      The language understood by the <span class="st200_term package">com.io7m.jsx</span>
      package can be defined by the following grammar:
    </div></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p2s2fo1" href="#st200_p2s2fo1">2.2.1. Grammar (non-terminals)</a></div><pre class="st200_verbatim">expression =
    symbol
  | quoted_string
  | "(" , { expression } , ")" ;

expression_squares =
    symbol
  | quoted_string
  | "[" , { expression_squares } , "]"
  | "(" , { expression_squares } , ")" ;</pre></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s2pg2" href="#st200_p2s2pg2">2</a></div><div class="st200_paragraph">
      The <span class="st200_term package">com.io7m.jsx</span> lexer
      recognizes the sequences <span class="st200_term constant">U+000D U+000A</span>
      and <span class="st200_term constant">U+000A</span> as line terminators for the
      purposes of tracking line and column numbers for diagnostic messages. The
      lexer does not permit bare <span class="st200_term constant">U+000D</span>
      characters to appear outside of 
      <a class="st200_link" href="p2s2.xhtml#st200_p2s2pg10">quoted strings</a>.
    </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s2pg3" href="#st200_p2s2pg3">3</a></div><div class="st200_paragraph">
      Many systems that parse S-expressions allow for the use of square
      brackets to increase readability. For example:
    </div></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p2s2fo2" href="#st200_p2s2fo2">2.2.2. Square brackets</a></div><pre class="st200_verbatim">(: map (→ (→ a b) (→ (list a) (list b))))

(: map (→ [→ a b] [→ (list a) (list b)]))</pre></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s2pg4" href="#st200_p2s2pg4">4</a></div><div class="st200_paragraph">
      Note that the second version that uses square brackets is slightly
      easier to understand due to the square brackets more clearly indicating
      which of the nested lists are being terminated. The 
      <span class="st200_term package">com.io7m.jsx</span> lexer can 
      optionally treat <span class="st200_term constant">U+005B [</span> and
      <span class="st200_term constant">U+005D ]</span> as tokens, and the parser
      ensures that the use of the brackets is balanced with respect to
      ordinary parentheses as part of the grammar above. If square brackets
      are enabled, the language understood by the 
      <span class="st200_term package">com.io7m.jsx</span> package is
      defined by <span class="st200_term constant">expression_squares</span>.
      Otherwise, the language is defined by
      <span class="st200_term constant">expression</span>.
    </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s2pg5" href="#st200_p2s2pg5">5</a></div><div class="st200_paragraph">
      The terminals of the language are given by:
    </div></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p2s2fo3" href="#st200_p2s2fo3">2.2.3. Grammar (terminals)</a></div><pre class="st200_verbatim">symbol_character =
  ? not (")" | "(" | U+0022 | WHITESPACE) ? ;

symbol_character_squares =
  ? not (")" | "(" | "[" | "]" | U+0022 | WHITESPACE) ? ;

symbol =
  symbol_character , { symbol_character } ;

quoted_character =
  ? not U+0022 ? ;

quoted_string =
  (quoted_character | escape) , { (quoted_character | escape) } ;

escape =
    escape_carriage
  | escape_newline
  | escape_tab
  | escape_quote
  | escape_unicode4
  | escape_unicode8 ;

escape_carriage =
  "\r" ;

escape_newline =
  "\n" ;

escape_quote =
  "\" , U+0022 ;

escape_tab =
  "\t" ;

escape_unicode4 =
  "\u" ,
  hex_digit , hex_digit , hex_digit , hex_digit ;
  
escape_unicode8 =
  "\u" ,
  hex_digit , hex_digit , hex_digit , hex_digit ,
  hex_digit , hex_digit , hex_digit , hex_digit ;

hex_digit =
  "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "0" |
  "a" | "A" | "b" | "B" | "c" | "C" | "d" | "D" | "e" | "E" | "f" | "F" ;
</pre></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s2pg6" href="#st200_p2s2pg6">6</a></div><div class="st200_paragraph">
      Due to limitations in the
      <a class="st200_link_external" href="https://en.wikipedia.org/wiki/Extended_Backus–Naur_Form">EBNF</a>
      format, the definitions for <span class="st200_term symbol">symbol_character</span>
      and <span class="st200_term symbol">quoted_character</span> cannot be expressed
      directly.
    </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s2pg7" href="#st200_p2s2pg7">7</a></div><div class="st200_paragraph">
      Informally, the <span class="st200_term symbol">symbol_character</span>
      rule should be understood to specify any Unicode character that is not
      <a class="st200_link_external" href="https://en.wikipedia.org/wiki/Whitespace_character">whitespace</a>,
      is not <span class="st200_term constant">U+0028 (</span>,  
      is not <span class="st200_term constant">U+0029 )</span>,
      and is not <span class="st200_term constant">U+0022 "</span>.
    </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s2pg8" href="#st200_p2s2pg8">8</a></div><div class="st200_paragraph">
      If <a class="st200_link" href="p2s2.xhtml#st200_p2s2pg3">square brackets</a> are enabled, 
      the <span class="st200_term symbol">symbol_character_squares</span>
      rule should be understood to replace the <span class="st200_term symbol">symbol_character</span>
      rule.
    </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s2pg9" href="#st200_p2s2pg9">9</a></div><div class="st200_paragraph">
      The <span class="st200_term symbol">quoted_character</span> rule should
      be understood to specify any character that is not
      not <span class="st200_term constant">U+0022 "</span>.
    </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s2pg10" href="#st200_p2s2pg10">10</a></div><div class="st200_paragraph">
      Quoted strings may contain <span class="st200_term term">escape codes</span>
      that are transformed to specific characters during lexing.
    </div></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p2s2fo4" href="#st200_p2s2fo4">2.2.4. Escape Codes</a></div><table class="st200_table" summary="Escape codes"><thead class="st200_table_head"><tr><th class="st200_table_column_name">Code</th><th class="st200_table_column_name">Resulting Character</th><th class="st200_table_column_name">Comment</th></tr></thead><tbody class="st200_table_body"><tr class="st200_table_row"><td class="st200_table_cell"><span class="st200_term constant">\"</span></td><td class="st200_table_cell"><span class="st200_term constant">U+0022</span></td><td class="st200_table_cell">Double quote</td></tr><tr class="st200_table_row"><td class="st200_table_cell"><span class="st200_term constant">\\</span></td><td class="st200_table_cell"><span class="st200_term constant">U+005C</span></td><td class="st200_table_cell">Backslash</td></tr><tr class="st200_table_row"><td class="st200_table_cell"><span class="st200_term constant">\r</span></td><td class="st200_table_cell"><span class="st200_term constant">U+000D</span></td><td class="st200_table_cell">Carriage return</td></tr><tr class="st200_table_row"><td class="st200_table_cell"><span class="st200_term constant">\n</span></td><td class="st200_table_cell"><span class="st200_term constant">U+000A</span></td><td class="st200_table_cell">Line feed</td></tr><tr class="st200_table_row"><td class="st200_table_cell"><span class="st200_term constant">\t</span></td><td class="st200_table_cell"><span class="st200_term constant">U+0009</span></td><td class="st200_table_cell">Horizontal tab</td></tr><tr class="st200_table_row"><td class="st200_table_cell"><span class="st200_term constant">\uNNNN</span></td><td class="st200_table_cell"><span class="st200_term constant">U+NNNN</span></td><td class="st200_table_cell">Unicode character NNNN (where N is a hexadecimal digit)</td></tr><tr class="st200_table_row"><td class="st200_table_cell"><span class="st200_term constant">\UNNNNNNNN</span></td><td class="st200_table_cell"><span class="st200_term constant">U+NNNNNNNN</span></td><td class="st200_table_cell">Unicode character NNNNNNNN (where N is a hexadecimal digit)</td></tr></tbody></table></div></div><div class="st200_navbar st200_navbar_bottom"><hr class="st200_hr"/><table class="st200_navbar_table" summary="Navigation bar"><tr><td class="st200_navbar_prev_file_cell"><a href="p2s1.xhtml#st200_p2s1">Previous</a></td><td class="st200_navbar_up_file_cell"><a href="p2.xhtml#st200_p2">Up</a></td><td class="st200_navbar_next_file_cell"><a href="p3.xhtml#st200_p3">Next</a></td></tr><tr><td class="st200_navbar_prev_title_cell">2.1. Notational Conventions</td><td class="st200_navbar_up_title_cell">2. Expression Language</td><td class="st200_navbar_next_title_cell">3. API Reference</td></tr></table></div></div></body></html>
