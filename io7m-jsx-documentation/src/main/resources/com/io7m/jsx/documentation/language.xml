<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright © 2015 <code@io7m.com> http://io7m.com

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted, provided that the above
  copyright notice and this permission notice appear in all copies.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  -->

<s:part
  xml:id="com.io7m.jsx.lang"
  xmlns:s="http://schemas.io7m.com/structural/2.1.0"
  xmlns:xi="http://www.w3.org/2001/XInclude">
  <s:part-title>Expression Language</s:part-title>
  <s:part-contents/>
  
  <s:section xml:id="com.io7m.jsx.lang.notation">
    <s:section-title>Notational Conventions</s:section-title>
    <s:section-contents/>

    <s:subsection>
      <s:subsection-title>Unicode</s:subsection-title>
      <s:paragraph>
        The specification makes reference to the
        <s:link-external s:target="http://unicode.org">Unicode</s:link-external>
        character set which, at the time of writing, is at version
        <s:term s:type="constant">6.2.0</s:term>. The specification
        often references specific Unicode characters, and does so using
        the standard notation <s:term s:type="expression">U+NNNN</s:term>,
        where <s:term s:type="variable">N</s:term> represents a hexadecimal
        digit. For example, <s:term s:type="constant">U+03BB</s:term>
        corresponds to the lowercase lambda symbol <s:term s:type="constant">λ</s:term>.
      </s:paragraph>
    </s:subsection>

    <s:subsection>
      <s:subsection-title>EBNF</s:subsection-title>
      <s:paragraph>
        The specification gives grammar definitions in
        <s:term s:type="package">ISO/IEC 14977:1996</s:term> Extended Backus-Naur
        form.
      </s:paragraph>
    </s:subsection>
  </s:section>
  
  <s:section xml:id="com.io7m.jsx.lang.language">
    <s:section-title>Language</s:section-title>
    <s:paragraph>
      The language understood by the <s:term s:type="package">${project.parent.name}</s:term>
      package can be defined by the following grammar:
    </s:paragraph>
    <s:formal-item s:kind="specification">
      <s:formal-item-title>Grammar (non-terminals)</s:formal-item-title>
      <s:verbatim><xi:include href="expressions.txt" parse="text"/></s:verbatim>
    </s:formal-item>
    <s:paragraph>
      The <s:term s:type="package">${project.parent.name}</s:term> lexer
      recognizes the sequences <s:term s:type="constant">U+000D U+000A</s:term>
      and <s:term s:type="constant">U+000A</s:term> as line terminators for the
      purposes of tracking line and column numbers for diagnostic messages. The
      lexer does not permit bare <s:term s:type="constant">U+000D</s:term>
      characters to appear outside of 
      <s:link s:target="com.io7m.jsx.lang.quote">quoted strings</s:link>.
    </s:paragraph>
    <s:paragraph xml:id="com.io7m.jsx.lang.language.square">
      Many systems that parse S-expressions allow for the use of square
      brackets to increase readability. For example:
    </s:paragraph>
    <s:formal-item s:kind="specification">
      <s:formal-item-title>Square brackets</s:formal-item-title>
      <s:verbatim><xi:include href="squares.txt" parse="text"/></s:verbatim>
    </s:formal-item>
    <s:paragraph>
      Note that the second version that uses square brackets is slightly
      easier to understand due to the square brackets more clearly indicating
      which of the nested lists are being terminated. The 
      <s:term s:type="package">${project.parent.name}</s:term> lexer can 
      optionally treat <s:term s:type="constant">U+005B [</s:term> and
      <s:term s:type="constant">U+005D ]</s:term> as tokens, and the parser
      ensures that the use of the brackets is balanced with respect to
      ordinary parentheses as part of the grammar above. If square brackets
      are enabled, the language understood by the 
      <s:term s:type="package">${project.parent.name}</s:term> package is
      defined by <s:term s:type="constant">expression_squares</s:term>.
      Otherwise, the language is defined by
      <s:term s:type="constant">expression</s:term>.
    </s:paragraph>
    <s:paragraph>
      The terminals of the language are given by:
    </s:paragraph>
    <s:formal-item s:kind="specification">
      <s:formal-item-title>Grammar (terminals)</s:formal-item-title>
      <s:verbatim><xi:include href="terminals.txt" parse="text"/></s:verbatim>
    </s:formal-item>
    <s:paragraph>
      Due to limitations in the
      <s:link-external s:target="https://en.wikipedia.org/wiki/Extended_Backus–Naur_Form">EBNF</s:link-external>
      format, the definitions for <s:term s:type="symbol">symbol_character</s:term>
      and <s:term s:type="symbol">quoted_character</s:term> cannot be expressed
      directly.
    </s:paragraph>
    <s:paragraph>
      Informally, the <s:term s:type="symbol">symbol_character</s:term>
      rule should be understood to specify any Unicode character that is not
      <s:link-external s:target="https://en.wikipedia.org/wiki/Whitespace_character">whitespace</s:link-external>,
      is not <s:term s:type="constant">U+0028 (</s:term>,  
      is not <s:term s:type="constant">U+0029 )</s:term>,
      and is not <s:term s:type="constant">U+0022 "</s:term>.
    </s:paragraph>
    <s:paragraph>
      If <s:link s:target="com.io7m.jsx.lang.language.square">square brackets</s:link> are enabled, 
      the <s:term s:type="symbol">symbol_character_squares</s:term>
      rule should be understood to replace the <s:term s:type="symbol">symbol_character</s:term>
      rule.
    </s:paragraph>
    <s:paragraph>
      The <s:term s:type="symbol">quoted_character</s:term> rule should
      be understood to specify any character that is not
      not <s:term s:type="constant">U+0022 "</s:term>.
    </s:paragraph>
    <s:paragraph xml:id="com.io7m.jsx.lang.quote">
      Quoted strings may contain <s:term s:type="term">escape codes</s:term>
      that are transformed to specific characters during lexing.
    </s:paragraph>
    <s:formal-item s:kind="specification">
      <s:formal-item-title>Escape Codes</s:formal-item-title>
      <s:table>
        <s:table-summary>Escape codes</s:table-summary>
        <s:table-head>
          <s:table-column-name>Code</s:table-column-name>
          <s:table-column-name>Resulting Character</s:table-column-name>
          <s:table-column-name>Comment</s:table-column-name>
        </s:table-head>
        <s:table-body>
          <s:table-row>
            <s:table-cell><s:term s:type="constant">\"</s:term></s:table-cell>
            <s:table-cell><s:term s:type="constant">U+0022</s:term></s:table-cell>
            <s:table-cell>Double quote</s:table-cell>
          </s:table-row>
          <s:table-row>
            <s:table-cell><s:term s:type="constant">\\</s:term></s:table-cell>
            <s:table-cell><s:term s:type="constant">U+005C</s:term></s:table-cell>
            <s:table-cell>Backslash</s:table-cell>
          </s:table-row>
          <s:table-row>
            <s:table-cell><s:term s:type="constant">\r</s:term></s:table-cell>
            <s:table-cell><s:term s:type="constant">U+000D</s:term></s:table-cell>
            <s:table-cell>Carriage return</s:table-cell>
          </s:table-row>
          <s:table-row>
            <s:table-cell><s:term s:type="constant">\n</s:term></s:table-cell>
            <s:table-cell><s:term s:type="constant">U+000A</s:term></s:table-cell>
            <s:table-cell>Line feed</s:table-cell>
          </s:table-row>
          <s:table-row>
            <s:table-cell><s:term s:type="constant">\t</s:term></s:table-cell>
            <s:table-cell><s:term s:type="constant">U+0009</s:term></s:table-cell>
            <s:table-cell>Horizontal tab</s:table-cell>
          </s:table-row>
          <s:table-row>
            <s:table-cell><s:term s:type="constant">\uNNNN</s:term></s:table-cell>
            <s:table-cell><s:term s:type="constant">U+NNNN</s:term></s:table-cell>
            <s:table-cell>Unicode character NNNN (where N is a hexadecimal digit)</s:table-cell>
          </s:table-row>
          <s:table-row>
            <s:table-cell><s:term s:type="constant">\UNNNNNNNN</s:term></s:table-cell>
            <s:table-cell><s:term s:type="constant">U+NNNNNNNN</s:term></s:table-cell>
            <s:table-cell>Unicode character NNNNNNNN (where N is a hexadecimal digit)</s:table-cell>
          </s:table-row>
        </s:table-body>
      </s:table>
    </s:formal-item>
  </s:section>
</s:part>
